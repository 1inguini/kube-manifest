VERSION --use-chmod 0.6
IMPORT ../builder
FROM builder+buildenv

ARG date=$(date --utc +%Y%m%d)

all:
  BUILD +scratch
  BUILD +cp

scratch-rootfs:
  FROM gcr.io/distroless/static:nonroot
  DO +SAVE_FULLPATH --path=/tmp
  DO +SAVE_FULLPATH --path=/home/nonroot
  DO +SAVE_FULLPATH --path=/etc/passwd
  DO +SAVE_FULLPATH --path=/etc/group
  DO +SAVE_FULLPATH --path=/etc/nsswitch.conf
  DO +SAVE_FULLPATH --path=/etc/ssl

scratch:
  FROM scratch
  COPY --keep-own +scratch-rootfs/ /
  WORKDIR /home/nonroot
  USER nonroot
  SAVE IMAGE --push registry.1inguini.com/library/scratch

SAVE_FULLPATH:
  COMMAND
  ARG --required path
  SAVE ARTIFACT --keep-own "$path" "$path"

cp-rootfs:
  RUN echo '/usr/bin/cp' >> files.txt
  DO builder+ROOTFS --infile=files.txt

cp:
  FROM scratch
  COPY +cp-rootfs/rootfs /
  ENTRYPOINT [ "/usr/bin/cp", "-vrn" ]

# s6-rootfs:
#   RUN $pacman -S s6
#   # RUN echo '/usr/bin/s6-supervise' '/usr/bin/s6-svscan' >> files.txt
#   # RUN $pacman -Qql execline s6 s6-rc | \
#   #   grep -Pve '(posix|/usr/include|(\.a|/)$)' >> files.txt
#   RUN f=( \
#     '/usr/bin/s6-svscan' \
#     '/usr/bin/s6-supervise' \
#     '/usr/bin/background' \
#     '/usr/bin/foreground' \
#     '/usr/bin/loopwhilex' \
#     '/usr/bin/sleep' \
#     ) && printf '%s\n' $f >> files.txt
#   DO builder+FILELIST --file=files.txt
#   DO builder+ROOTFS --infile=files.txt --save=no

#   RUN mkdir -p service/.s6-svscan
#   SAVE ARTIFACT --keep-own rootfs
#   DO builder+VERSION --target=s6 --outfile=version.txt

# s6:
#   COPY --keep-own +s6-rootfs/version.txt .
#   ARG version=$(cat version.txt)

#   FROM +scratch
#   COPY --keep-own +s6-rootfs/rootfs /
#   ENTRYPOINT [ "/usr/bin/background", "-d", " s6-svscan", " /service", "" ]
#   SAVE IMAGE --push registry.1inguini.com/library/s6-rc:latest
#   SAVE IMAGE --push registry.1inguini.com/library/s6-rc:$version

# s6-test-rootfs:
#   COPY --keep-own ../mariadb+strip/rootfs rootfs

uutils:
  RUN $pacman -S rustup
  RUN rustup default stable
  RUN rustup target install x86_64-unknown-linux-musl
  GIT CLONE --branch 0.0.16 https://github.com/uutils/coreutils.git uutils
  WORKDIR uutils
  ARG packages=sleep echo
  RUN for p in $packages; do \
      cd src/uu/$p && \
        cargo install --target=x86_64-unknown-linux-musl --path . --root $HOME/rootfs && \
        cd ../../..; \
    done
  WORKDIR ..
  SAVE ARTIFACT rootfs/bin command AS LOCAL uutils

#   COPY --keep-own ../mariadb+var/var rootfs/var

#   SAVE ARTIFACT --keep-own rootfs

# s6-test:
#   FROM +s6
#   COPY --keep-own +s6-test-rootfs/rootfs /
#   CMD [ "loopwhilex", "-o", "1", "foreground", "sleep", "1", "", "mariadb", "--wait", "--connect-timeout=10", "-B", "-u", "root", "--password=secret", "-e", "SELECT Host,User FROM mysql.user"]
#   SAVE IMAGE s6-test